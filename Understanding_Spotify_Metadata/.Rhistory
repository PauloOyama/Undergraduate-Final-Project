cat("Mean Y = ",mean(periodos[[i]]$y))
cat(" Mean X= ",mean(periodos[[i]]$x),", SD = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=100, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("Mean Y = ",mean(periodos[[i]]$y))
cat(" Mean X= ",mean(periodos[[i]]$x),", SD = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=1, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=5, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=10, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=20, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=50, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
# Guarda o resultado do melhor filho em 1000 epocas
periodos <- list()
# Guarda o numero de filhos
mu <- c(1,2,5,10,15)
for(i in mu){
for(j in 1:1000){
x0 = gera_filho(i)
epoca <- ee(tmax=100, x = x0$x,y=x0$y,n = i)
# O primeiro disparo é o melhor filho no periodo
if (j == 1){
periodos[[i]] = epoca
}else{
# O melhor filho dessa epoca eh melhor que o filho
# do periodo ?
# Se sim, troca o filho
if(min(periodos[[i]]$f) < min(epoca$f)){
periodos[[i]] <- epoca
periodos[[i]]$count <- j
}
}
}
}
periodos <- periodos[mu]
# metodo mais facil para visualizar a media e o desvio padrao
for(i in 1:length(periodos)){
cat("MeanY = ",mean(periodos[[i]]$y), " SDY = ",sd(periodos[[i]]$x))
cat(" Mean X= ",mean(periodos[[i]]$x),", SDX = ",sd(periodos[[i]]$x)," F(x) > ", min(periodos[[i]]$f),'\n')
}
?lm
runif(1000,-1,2)
estimativaIntegral <- function(a,b){
x <- runif(10000, a, b)
aux <- exp(2*x)*exp(x^2)
integral <- mean(aux)
return((b-a)*integral)
}
exericio1 <- estimativaIntegral(-1,2)
exericio1
library(ggplot2)
ggplot(data=df, mapping =  aes(x=Chirps, y= Temperature)) + geom_point()
l <- list()
l$x <- (1,3,5,8,2)
l$y <- (3,4,2,1,7)
df <- data.frame(ls)
ggplot(data=df, mapping =  aes(x=Chirps, y= Temperature)) + geom_point()
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()
ls
l <- list()
l$x <- c(1,3,5,8,2)
l$y <- c(3,4,2,1,7)
df <- data.frame(ls)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()
ls
l
l <- list()
l$x <- c(1,3,5,8,2)
l$y <- c(3,4,2,1,7)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()
l <- list()
l$x <- c(1,3,5,8,2,5,6,3,4)
l$y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=1, xend= 3, y = 3, yend = 4), col="blue")
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=1, xend= 3, y = 3, yend = 4), col="blue")
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=1, xend= 3, y = 3, yend = 4),col="blue")
l$y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_label(aes(x+.5,y+0.5,label=l)) +
geom_segment(aes(x=1, xend= 3, y = 3, yend = 4),col="blue")
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=1, xend= l$x, y = 3, yend = l$y),col="blue")
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=1, xend= l$x, y = 3, yend = l$y),col="red") +
geom_segment(aes(x=5, xend= l$x, y = 2, yend = l$y),col="blue")
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")
?geom_points
?geom_point
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")
dist(df)
l <- list()
l$x <- c(4,3,5,8,2,5,6,3,1)
l$y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")
dist(df)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(x,y))
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= (x,y)))
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= (x,y) ))
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= "A"))
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= "A"))
l <- list()
l$x <- c(4,3,5,8,2,5,6,3,1)
l$y <- c(3,4,2,1,7,1,2,6,3)
l$pair <- paste0("(",x,",",y,")")
df <- data.frame(l)
df <- data.frame(l)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pairs))
l
l <- list()
l$x <- c(4,3,5,8,2,5,6,3,1)
l$y <- c(3,4,2,1,7,1,2,6,3)
l$pair <- paste0("(",x,",",y,")")
df <- data.frame(l)
df
l$x <- c(4,3,5,8,2,5,6,3,1)
l$y <- c(3,4,2,1,7,1,2,6,3)
l$pair <- paste0("(",x,",",y,")")
df <- data.frame(l$x,l$y,l$pair)
df
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
pair <- paste0("(",x,",",y,")")
df <- data.frame(x,y,pair)
df
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pairs))
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair))
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-1.2,vjust=0.1)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-0.5,vjust=0.5)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-0.5,vjust=1)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-0.5,vjust=0.2)
dist(df)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-0.5,vjust=0.4)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),hjust=-0.5,vjust=0.1)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 1, nudge_y = 1)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 1, nudge_y = 0.5)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.5, nudge_y = 0.5)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.2, nudge_y = 0.2)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2) +
theme_minimal()
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2) +
theme_dark()
theme
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2) +
theme_classic()
library(ggplot2)
l <- list()
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
theme_classic()
library(ggplot2)
l <- list()
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= x, y = 3, yend = y),col="red")
library(ggplot2)
l <- list()
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
pair <- paste0("(",x,",",y,")")
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= l$x, y = 3, yend = l$y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2) +
theme_classic()
library(ggplot2)
l <- list()
x <- c(4,3,5,8,2,5,6,3,1)
y <- c(3,4,2,1,7,1,2,6,3)
pair <- paste0("(",x,",",y,")")
df <- data.frame(x,y,pair)
ggplot(data=df, mapping =  aes(x=x, y= y)) + geom_point()+
geom_segment(aes(x=4, xend= x, y = 3, yend = y),col="red")+
geom_text(aes(label= pair),nudge_x = 0.3, nudge_y = 0.2) +
theme_classic()
dist(df)
dados <- read.csv("DataSet_With_Genre.csv")
#nesta primeira parte, vou fazer o tratamento dos dados, tirar um "lixinho" que vem dentro da variavel de genero musical, por exemplo.
library(stringr)
library(ggplot2)
library(factoextra)
library(rpart)
library(rpart.plot)
dados <- read.csv("DataSet_With_Genre.csv")
setwd("A:/Universidade/TCC/Implementação/Understanding_Spotify_Metadata/")
dados <- read.csv("DataSet_With_Genre.csv")
library(stringr)
library(ggplot2)
library(factoextra)
library(rpart)
library(rpart.plot)
setwd("A:/Universidade/TCC/Implementação/Understanding_Spotify_Metadata/")
dados <- read.csv("DataSet_With_Genre.csv")
str(dados)
str_view_all(dados$genres[991], '(\\{(")?)| (\\") |((\\")?\\})')
generos <- str_replace_all(dados$genres, '(\\{(")?)|((\\")?\\})', "")
generos <- str_replace_all(generos, '\\"', "")
generos <- str_extract(generos, "[^,]+")
unique(generos)
#vamos trabalhar apenas com os generos mais populares, no caso a seguir escolheu-se os dez generos mais populares
generos_populares <- names(sort(table(generos), decreasing = TRUE)[1:10])
indices_generos_populares <- generos %in% generos_populares
dados_populares <- dados[indices_generos_populares,]
dados_populares$genres
dados_populares$genres <- generos[indices_generos_populares]
dados_populares$genres <- as.factor(dados_populares$genres)
dados_populares_escalonado <- scale(dados_populares[,-c(1,2,4,5,6,18,20)])
plot(prcomp(dados_populares_escalonado)) #variaveis mais importantes para o PCA
spotify_km <- kmeans(x = dados_populares_escalonado,
centers = 3, nstart = 10)
fviz_cluster(object = spotify_km,
data = dados_populares_escalonado, labelsize = 1)
dados_populares$cluster <- as.factor(spotify_km$cluster)
table(dados_populares$genres[spotify_km$cluster == 1]) #instrumental, bossa nova
table(dados_populares$genres[spotify_km$cluster == 2]) #brazilian hip hop
table(dados_populares$genres[spotify_km$cluster == 3])
ggplot(dados_populares, aes(x = genres, y = danceability))+
geom_boxplot() #classical
ggplot(dados_populares, aes(x = genres, y = energy))+
geom_boxplot()
is.rock <- str_detect(dados_populares$genres, "rock")
is.bossa <- str_detect(dados_populares$genres, "bossa")
is.metal <- str_detect(dados_populares$genres, "metal")
is.gospel <- str_detect(dados_populares$genres, "gospel")
is.pop <- str_detect(dados_populares$genres, "pop")
is.hiphop <- str_detect(dados_populares$genres, "hip")
is.classical <- str_detect(dados_populares$genres, "classical")
dados_populares2 <- dados_populares
dados_populares2$categoria <- NA
dados_populares2$categoria[is.bossa] <- "bossa"
dados_populares2$categoria[is.rock] <- "rock"
dados_populares2$categoria[is.gospel] <- "gospel"
dados_populares2$categoria[is.metal] <- "metal"
dados_populares2$categoria[is.pop] <- "pop"
dados_populares2$categoria[is.classical] <- "classical"
dados_populares2$categoria[is.hiphop] <- "hip hop"
dados_populares2 <- dados_populares2[,-c(1,2,3,4,5,6,9,12,15,18,20,21)]
N <- round(0.8*nrow(dados_populares2))
treino <- dados_populares2[1:N,]
teste <- dados_populares2[-(1:N),]
arvore <- rpart(categoria ~., treino, method = "class")
rpart.plot(arvore)
previsao <- predict(arvore, teste, type = "class")
mean(previsao == teste$categoria) #baixa acuracia
dados_populares3 <- dados_populares2[dados_populares2$categoria %in% c("metal", "hip hop", "classical"),]
str(dados_populares3)
dados_populares3$categoria <- as.factor(dados_populares3$categoria)
N <- round(0.8*nrow(dados_populares3))
treino <- dados_populares3[1:N,]
teste <- dados_populares3[-(1:N),]
arvore <- rpart(categoria ~., treino, method = "class")
rpart.plot(arvore, extra = 101)
previsao <- predict(arvore, teste, type = "class")
mean(previsao == teste$categoria)
#vamos trabalhar apenas com os generos mais populares, no caso a seguir escolheu-se os dez generos mais populares
generos_populares <- names(sort(table(generos), decreasing = TRUE)[1:10])
indices_generos_populares <- generos %in% generos_populares
dados_populares <- dados[indices_generos_populares,]
dados_populares$genres
dados_populares$genres <- generos[indices_generos_populares]
dados_populares$genres <- as.factor(dados_populares$genres)
dados_populares_escalonado <- scale(dados_populares[,-c(1,2,4,5,6,18,20)])
plot(prcomp(dados_populares_escalonado)) #variaveis mais importantes para o PCA
spotify_km <- kmeans(x = dados_populares_escalonado,
centers = 3, nstart = 10)
fviz_cluster(object = spotify_km,
data = dados_populares_escalonado, labelsize = 1)
#############################################
#clusterização
#############################################
str(dados_populares3)
dados_scaled <- scale(dados_populares3[,-10])
plot(prcomp(dados_scaled))
spotify_km <- kmeans(x = dados_scaled,
centers = 3, nstart = 10)
spotify_km$size
fviz_cluster(object = spotify_km,
data = dados_populares3[,-10], labelsize = 1)
table(dados_populares3$categoria[spotify_km$cluster == 1])
